#pragma once
#include"AVLStruct.h"
#include"AVLRotate.h"
#include"AVLDelete.h"

////////////////////////////////////////////////////////////平衡二叉树的结点插入操作/////////////////////////////////////////////////////
BOOL InsertAVLTree(AVLTree* T, ElemType x);            // 平衡二叉树的插入构建
static BOOL _InsertAVLTree(AVLNode** node, ElemType x);           //插入构建的子函数,修改指针需要二级指针

BOOL InsertAVLTreeIterate(AVLTree* T, ElemType x);            // 平衡二叉树的迭代插入构建
static BOOL _InsertAVLTreeIterate(AVLNode** node, ElemType x);           //插入构建的子函数,修改指针需要二级指针

////////////////////////////////////////////////////////////二叉树的结点删除操作/////////////////////////////////////////////////////
//BOOL RemoveBSTree(BST *T, ElemType key);          //指定结点删除
//static BOOL _RemoveBSTree(BSTNode** p, ElemType key);  //删除结点子函数

////////////////////////////////////////////////////////////二叉树的结点搜索函数/////////////////////////////////////////////////////

////////////////////////////////////////////////////////////二叉树的极值获取/////////////////////////////////////////////////////

////////////////////////////////////////////////////////////二叉树的排序/////////////////////////////////////////////////////